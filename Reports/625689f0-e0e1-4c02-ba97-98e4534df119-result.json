{"name": "Verify appointment creation for primary Member for Covid treatment From House call by selecting Primary address", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests_Sollis_MVP.test_HouseCall_CovidCareCovidTreatment.Test_HouseCall_CovidCare_VaccinationAppointments object at 0x000001934D8063B0>, setup = None\nLoginpageDataloader = ('prameela.b@lancesoft.com', 'Password1234$')\n\n    @allure.title(\"Verify appointment creation for primary Member for Covid treatment From House call by selecting Primary address\")\n    def test_VerifyHouseCallAppointment_PrimaryMemberWithPrimaryAddress(self, setup,LoginpageDataloader):\n        # try:\n        base = BaseClass(self.driver)\n        base.signin(setup)\n        base.Login(LoginpageDataloader)\n        scheduleApp = ScheduleAppClinic(self.driver)\n        time.sleep(2)\n        scheduleApp.NavigateToScheduleAppointmentPage().click()\n        header = scheduleApp.headerInClinic().text\n        if header == \"In-Clinic\":\n            assert True\n        else:\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"test_Appointment1\",\n                          attachment_type=AttachmentType.PNG)\n            assert False\n        common = CommonMethod(self.driver)\n        common.NavigatetoHousCallTab()\n        common.VerifyHouseCallHeader()\n        common.NavigateToHouseCallCovidCare()\n        common.getAppointmentConfirmPopup()\n        time.sleep(10)\n        housecare = HouseCallCovidCare(self.driver)\n        Services = housecare.getAllOptionsAvailableUnderHouseCall()\n        list_services_HouseCall = []\n        for serv in Services:\n            services1 = serv.text\n            list_services_HouseCall.append(services1)\n        print(list_services_HouseCall)\n        common.selectCovidTreatementOptionRandomly().click()\n        urgentcare = UrgentCare(self.driver)\n>       urgentcare.checkSubmitButtonisclickable().click()\n\ntests_Sollis_MVP\\test_HouseCall_CovidCareCovidTreatment.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPageObject\\UrgentCareInClinic.py:17: in checkSubmitButtonisclickable\n    return  WebDriverWait(self.driver, 15).until(EC.visibility_of_element_located((By.XPATH,\"//a[text()='Next']\")))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bc7305e3-dd14-43f9-bf7c-48f0eb7875a5\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001934E384610>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "parameters": [{"name": "LoginpageDataloader", "value": "('prameela.b@lancesoft.com', 'Password1234$')"}], "start": 1658482523645, "stop": 1658482589751, "uuid": "10ab1fce-55aa-4e0c-984a-a5020d6ef9e4", "historyId": "c3d4b549b15c6c29b4e685d42f923a4e", "testCaseId": "7d457e6c3895579407d2411a2f23bf04", "fullName": "tests_Sollis_MVP.test_HouseCall_CovidCareCovidTreatment.Test_HouseCall_CovidCare_VaccinationAppointments#test_VerifyHouseCallAppointment_PrimaryMemberWithPrimaryAddress", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests_Sollis_MVP"}, {"name": "suite", "value": "test_HouseCall_CovidCareCovidTreatment"}, {"name": "subSuite", "value": "Test_HouseCall_CovidCare_VaccinationAppointments"}, {"name": "host", "value": "HYD-ChetanB"}, {"name": "thread", "value": "17020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests_Sollis_MVP.test_HouseCall_CovidCareCovidTreatment"}]}